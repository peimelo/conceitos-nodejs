{"version":3,"sources":["services/api.js","App.js","index.js"],"names":["api","axios","create","baseURL","process","REACT_APP_BASE_URL","App","useState","repositories","setRepositories","a","post","title","Date","now","url","techs","response","repository","data","id","delete","newRepositories","filter","useEffect","get","then","data-testid","map","key","onClick","handleRemoveRepository","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAMeA,E,OAJHC,EAAMC,OAAO,CACvBC,QAASC,mHAAYC,oBAAsB,0B,MCkD9BC,MAjDf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,iDASb,8BAAAC,EAAA,sEACyBV,EAAIW,KAAK,eAAgB,CAC9CC,MAAM,kBAAD,OAAoBC,KAAKC,OAC9BC,IAAK,6CACLC,MAAO,CAAC,UAAW,aAJvB,OACQC,EADR,OAOQC,EAAaD,EAASE,KAE5BV,EAAgB,GAAD,mBAAKD,GAAL,CAAmBU,KATpC,4CATa,kEAqBb,WAAsCE,GAAtC,eAAAV,EAAA,sDACEV,EAAIqB,OAAJ,uBAA2BD,IAErBE,EAAkBd,EAAae,QACnC,SAACL,GAAD,OAAgBA,EAAWE,KAAOA,KAGpCX,EAAgBa,GAPlB,4CArBa,sBA+Bb,OA5BAE,qBAAU,WACRxB,EAAIyB,IAAI,gBAAgBC,MAAK,SAACT,GAC5BR,EAAgBQ,EAASE,WAE1B,IAyBD,6BACE,wBAAIQ,cAAY,mBACbnB,EAAaoB,KAAI,SAACV,GAAD,OAChB,wBAAIW,IAAKX,EAAWE,IACjBF,EAAWN,MACZ,4BAAQkB,QAAS,kBArCd,2CAqCoBC,CAAuBb,EAAWE,MAAzD,gBAON,4BAAQU,QA5CC,4CA4CT,eC5CNE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0263a0cd.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL || 'http://localhost:3333',\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport api from './services/api';\nimport './styles.css';\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    api.get('repositories').then((response) => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `New Repository ${Date.now()}`,\n      url: 'https://repositories-nodejs.herokuapp.com/',\n      techs: ['Node.js', 'ReactJS'],\n    });\n\n    const repository = response.data;\n\n    setRepositories([...repositories, repository]);\n  }\n\n  async function handleRemoveRepository(id) {\n    api.delete(`repositories/${id}`);\n\n    const newRepositories = repositories.filter(\n      (repository) => repository.id !== id\n    );\n\n    setRepositories(newRepositories);\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        {repositories.map((repository) => (\n          <li key={repository.id}>\n            {repository.title}\n            <button onClick={() => handleRemoveRepository(repository.id)}>\n              Remover\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}